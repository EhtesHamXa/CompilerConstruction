CLASSDECLARATION -> CLASSMODIFIER class ID CLASSBASE  cbro CLASSMEMBERDECLARATION  cbrc .
CLASSMODIFIER ->  interface | public |  private | abstract | sealed | .
CLASSBASE ->  : TYPENAME |  .
CLASSMEMBERDECLARATION ->   FIELDDECLARATION CLASSMEMBERDECLARATION | METHODDECLARATION CLASSMEMBERDECLARATION | CONSTRUCTORDECLARATION CLASSMEMBERDECLARATION | STATICCONSTRUCTORDECLARATION CLASSMEMBERDECLARATION | TYPEDECLARATION CLASSMEMBERDECLARATION.
METHODDECLARATION ->  METHODMODIFIER RETURNTYPE MEMBERNAME ( FORMALPARAMETERLIST ) METHODBODY.
METHODMODIFIER ->  public | private | static | virtual | override | abstract | .
RETURNTYPE ->  TYPE | void .
MEMBERNAME ->  INTERFACETYPE . ID .
METHODBODY ->  BLOCK | ; .
FORMALPARAMETERLIST ->  FIXEDPARAMETERS | .
FIXEDPARAMETERS ->  FIXEDPARAMETER FIXEDPARAMETERsS1 .
FIXEDPARAMETERS1 ->  , FIXEDPARAMETER FIXEDPARAMETERS1 | .
FIXEDPARAMETER ->  TYPE ID.
CONSTRUCTORDECLARATION ->  CONSTRUCTORMODIFIER CONSTRUCTORDECLARATOR BLOCK.
CONSTRUCTORMODIFIER ->  public | protected | private | .
CONSTRUCTORDECLARATOR ->  ID ( FORMALPARAMETERLIST ) CONSTRUCTORINITIALIZER .
CONSTRUCTORINITIALIZER ->  : ACCESS ( ARGUMENTLIST22 ) | .
ARGUMENTLIST22  ->  ARGUMENTLIST | .
ACCESS  ->  base | this | .
STATICCONSTRUCTORDECLARATION ->  static ID ( ) BLOCK .
INTERFACEDECLARATION ->   INTERFACEMODIFIER interface ID INTERFACEDECLARATION1 INTERFACEDECLARATION2.
INTERFACEDECLARATION1 ->  : InterfaceType | .
INTERFACEDECLARATION2 ->   cbro INTERFACEMEMBERDECLARATION  cbrc ; | .
INTERFACEMODIFIER ->   public | protected | private | .
INTERFACEMEMBERDECLARATION ->  INTERFACEMETHODDECLARATION  .
INTERFACEMETHODDECLARATION ->  INTERFACEMETHODDECLARATION1 RETURNTYPE ID ( FORMALPARAMETERLIST ) ;.
INTERFACEMETHODDECLARATION1 ->  new | .
STATEMENT ->  DECLARATIONSTATEMENT | EMBEDDEDSTATEMENT | .
EMBEDDEDSTATEMENT ->  BLOCK | EMBEDDEDSTATEMENT1 ; | SELECTIONSTATEMENT | ITERATIONSTATEMENT| JUMPSTATEMENT | TRYSTATEMENT .
EMBEDDEDSTATEMENT1 ->  STATEMENTEXPRESSION | .
BLOCK ->   cbro BLOCK1  cbrc .
BLOCK1 ->  STATEMENT | .
DECLARATIONSTATEMENT ->  LOCALVARIABLEDECLARATION ; .
LOCALVARIABLEDECLARATION ->  TYPE VARIABLEDECLARATOR LOCALVARIABLEDECLARATION1.
LOCALVARIABLEDECLARATION1 ->  , VARIABLEDECLARATOR LOCALVARIABLEDECLARATION1 | .
VARIABLEDECLARATOR ->  ID | ID = VARIABLEINITIALIZER.
VARIABLEINITIALIZER ->  EXPRESSION | ARRAYINITIALIZER.
STATEMENTEXPRESSION ->  INVOCATIONEXPRESSION | OBJECTCREATIONEXPRESSION | ASSIGNMENT | PRIMARYEXPRESSION1 .
PRIMARYEXPRESSION1 ->  PRIMARYEXPRESSION indec | incdec PRIMARYEXPRESSION  .
SELECTIONSTATEMENT ->  if ( BOOLEANEXPRESSION ) EMBEDDEDSTATEMENT IF1 | switch ( EXPRESSION )  SWITCHSECTION .
IF1 ->  else EMBEDDEDSTATEMENT | .
SWITCHSECTION  ->   SWITCHLABEL SWITCHSECTION1 SWITCHSECTION | .
SWITCHSECTION1  ->  STATEMENT SWITCHSECTION1 | .
SWITCHLABEL ->  case CONSTANTEXPRESSION : SWITCHLABEL | default : SWITCHLABEL | .
ITERATIONSTATEMENT ->  while ( BOOLEANEXPRESSION ) EMBEDDEDSTATEMENT | do EMBEDDEDSTATEMENT while ( BOOLEANEXPRESSION ) ; | for ( FORINITIALIZER ; BOOLEANEXPRESSION1 ; FORITERATOR ) EMBEDDEDSTATEMENT | foreach ( TYPE ID in EXPRESSION ) EMBEDDEDSTATEMENT.
BOOLEANEXPRESSION1 ->  BOOLEANEXPRESSION | .
FORINITIALIZER ->  LOCALVARIABLEDECLARATION | STATEMENTEXPRESSION FORITERATOR1 | .
FORITERATOR ->  STATEMENTEXPRESSION FORITERATOR1 | .
FORITERATOR1 ->  , STATEMENTEXPRESSION |.
JUMPSTATEMENT ->  break ; | continue ; | return EXPRESSION11 ; | throw EXPRESSION11 ; .
EXPRESSION11 ->  EXPRESSION | .
TRYSTATEMENT ->  try BLOCK CATCHCLAUSES .
CATCHCLAUSES ->  catch CATCHCLAUSES1 BLOCK FINALLYBLOCK | .
CATCHCLAUSES1 ->  ( TYPENAME CATCHCLAUSES12 ) | .
CATCHCLAUSES12 ->  ID | .
FINALLYBLOCK ->  finally BLOCK | . 


TYPE-> VALUETYPE 
    | REFERENCTYPE.

VALUETYPE-> TYPENAME 
    |  double 
    | bool 
    | int 
    |  long 
    |  char 
    | string.

REFERENCTYPE-> CLASSTYPE 
            | INTERFACETYPE 
            | ARRAYTYPE.

CLASSTYPE-> TYPENAME
               | object.

INTERFACETYPE-> TYPENAME.

ARRAYTYPE-> TYPE sqro ( , ) sqrc
VARIABLEREFERENCE-> EXPRESSION
TYPENAME-> ID TYPENAME1
TYPENAME1 -> dot ID TYPENAME1
            |.

ID -> letter character.



ARGUMENTLIST->ARGUMENT ARG1.
ARG1 -> ARGUMENT ARG1 
| . 
ARGUMENT-> EXPRESSION.

PRIMARYEXPRESSION-> literal 
| ID 
| ( EXPRESSION ) 
| PRIMARYEXPRESSION dot ID 
| PREDEFINEDTYPE dot ID 
| INVOCATIONEXPRESSION 
| PRIMARYEXPRESSION sqro EXPRESSION EXPRESSION1 sqrc
| this dot ID 
| base dot ID 
| base sqro EXPRESSION EXPRESSION1 sqrc 
| PRIMARYEXPRESSION sqro inc | dec sqrc 
| NEWEXPRESSIONEXPRESSION.

PREDEFINEDTYPE-> bool 
|  char 
| double 
| int 
| string.  

INVOCATIONEXPRESSION-> PRIMARYEXPRESSION INVOCATIONEXPRESSION1.

INVOCATIONEXPRESSION1-> ( ARGUMENTLIST )
|.
NEWEXPRESSION-> OBJECTCREATIONEXPRESSION 
| ARRAY-CREATION-EXPRESSION. 

OBJECTCREATIONEXPRESSION -> new TYPE ( (ARGUMENT-LIST) ). 

ARRAYCREATIONEXPRESSION -> new TYPE (( EXPRESSION EXPRESSION1)) 
| new ARRAYTYPE ARRAYINITIALIZER.

ARRAYINITIALIZER -> sqro VARIABLEINITIALIZER1 sqrc.

VARIABLEINITIALIZER1 -> VARIABLEINITIALIZER VARIABLEINITIALIZER1 
|. 
UNARYEXPRESSION ->  UNARYOPS PRIMARYEXPRESSION
UNARYOPS -> + 
| minus 
| ! 
| inc 
| dec  . 
MULTIPLICATIVEOPERATOR-> * 
| / 
| % .
ADDITIVEEXPRESSION-> MULTIPLICATIVEEXPRESSION AOME.
AOME -> ADDITIVEEXPRESSION AOME 
|.
ADDITIVEOPERATOR-> + 
| minus.

RELATIONALEXPRESSION-> RELATIONALOPERATOR1.

RELATIONALOPERATOR1 -> RELATIONALOPERATOR RELATIONALOPERATOR1 
|. 

RELATIONALOPERATOR-> < 
| > 
| <= 
| >=. 

EQUALITYEXPRESSION-> RELATIONALEXPRESSION EQRE.

EQRE -> EQUALITYOPERATOR RELATIONALEXPRESSION EQRE 
|.

EQUALITYOPERATOR-> == 
| !=.

ANDEXPRESSION-> EQUALITYEXPRESSION ANDEXPRESSION1.
ANDEXPRESSION1 -> &EQUALITYEXPRESSION ANDEXPRESSION
|.
EXCLUSIVEOREXPRESSION-> ANDEXPRESSION EXCLUSIVEOREXPRESSION1.

EXCLUSIVEOREXPRESSION1 -> ^ANDEXPRESSION EXCLUSIVEOREXPRESSION1
|.
INCLUSIVEOREXPRESSION-> EXCLUSIVEOREXPRESSION INCLUSIVEOREXPRESSION1.

INCLUSIVEOREXPRESSION -> or EXCLUSIVEOREXPRESSION INCLUSIVEOREXPRESSION 
| .

EXCLUSIVEOREXPRESSION1 -> or INCLUSIVEOREXPRESSION INCLUSIVEOREXPRESSION1
| . 

CONDITIONALANDEXPRESSION-> INCLUSIVEOREXPRESSION INCLUSIVEOREXPRESSION1.

INCLUSIVEOREXPRESSION1 -> &&INCLUSIVEOREXPRESSION 
|.

CONDITIONALOREXPRESSION-> CONDITIONALANDEXPRESSION CONDITIONALANDEXPRESSION1.

CONDITIONALANDEXPRESSION1 -> lor CONDITIONALANDEXPRESSION 
|.

ASSIGNMENT-> ASSIGNMENTOPERATOR EXPRESSION.

ASSIGNMENTOPERATOR-> = 
| += 
| -=.  

EXPRESSION->   CONDITIONALOREXPRESSION sqro ? EXPRESSION EXPRESSION sqrc 
| ASSIGNMENT.

EXPRESSION1-> EXPRESSION EXPRESSION1 
|.

BOOLEANEXPRESSION-> EXPRESSION.


